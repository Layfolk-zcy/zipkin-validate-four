server:
  port: 8083
eureka:
  # 自定义应用服务在eureka中的实例名称
  instance:
    # eureka中的应用服务实例名称定义(配置后Eureka Server处显示,不配置显示默认注册名)
    instance-id: ${spring.application.name}:${server.port}
    # 访问路径可以显示IP地址
    prefer-ip-address: true
    # 设置hostname名称，在构架eureka应用服务的实例名称时将会使用, hostname:applicationName:port
    # hostname: localhost
  client:
    registerWithEureka: true # 单点的时候设置为 false 禁止注册自身
    fetchRegistry: true # 单点的时候设置为不拉取服务注册列表数据
    serviceUrl:
      # eureka服务端集群时使用参数，服务端与服务端之间相互发现与注册
      #（eureka注册中心需要覆盖默认的eureka注册中心地址默认端口8671，客户端使用该defaultZone值进行服务端的服务注册）
      defaultZone: http://127.0.0.1:${server.port}/eureka/ # web页面访问 http://localhost:8083
    #server:
    #evictionIntervalTimerInMs: 4000 # 将服务从注册列表中移除等待时间(服务未响应时)
    #enableSelfPreservation: false # 是否开启自我包含机制
spring:
  kafka:
    bootstrap-servers: 172.1.0.71:9092
  zipkin:
    enabled: true #开启zipkin分析
    base-url: http://127.0.0.1:9411
    discoveryClientEnabled: false #让nacos把它当成一个URL，而不要当做服务名
    # 指定传输类型
    sender:
      type: kafka
  sleuth:
    web:
      additional-skip-pattern: "/eureka/apps/*|/eureka/apps/|/eureka/*|/v2/api-docs/*|/v2/api-docs"
    sampler:
      #rate: 10  #限速器，每秒采集10个请求，防止大并发过载。推荐
      probability: 1.0 #抽样率  默认0.1
  application:
    name: eureka-server
